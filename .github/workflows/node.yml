name: Node

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        default: 16
        type: string
      runner-label:
        required: false
        type: string
        default: self-hosted
      nexus-url:
        type: string
        required: true
      sonar-host-url:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      GH_TOKEN:
        required: true

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:

  notify:
    runs-on: ${{ inputs.runner-label }}
    steps:
      - name: Notifying For Build and Validation
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GH_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            *** Running Node Build and SonarQube Scan with Quality Gate ***

            Results will display here momentarily...

  build:
    needs: notify
    runs-on: ${{ inputs.runner-label }}

    steps:
    # https://github.com/actions/setup-node
    # This is for self-hosted Runners.
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        # registry-url: ${{ inputs.nexus-url }}

    - uses: actions/checkout@v3

    - name: Setup Registry
      run: |
          echo "registry=${{ inputs.nexus-url }}" > .npmrc
          echo -e "email=engineering@teckro.com" >> .npmrc
          echo -e "legacy-peer-deps=true" >> .npmrc

    - name: Lint Commit
      run: git log -1 --pretty=format:"%s" | npx commitlint

    - name: Install Dependencies
      id: install-dep
      run: |
        cat .npmrc
        npm cache verify
        npm ci

    - name: Build
      id: build
      run: npm run build

    - name: Lint
      id: lint
      run: |
        npm run lint

    - name: Test
      id: test
      run: |
        npm run test:ci

    - name: SonarQube Scan
      id: scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

    - name: SonarQube Quality Gate check
      id: quality-gates
      continue-on-error: true
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Post Quality Gate Results
      uses: mshick/add-pr-comment@v1
      with:
        repo-token: ${{ secrets.GH_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
        message: |
          Quality Gates Results: `${{ steps.quality-gates.outcome }}` see results on ${{ inputs.sonar-host-url }}

    - name: Post Build Checks
      if: steps.quality-gates.outcome == 'failure'
      run: exit 1
